#!/bin/bash

ACTION=$ACTION
DEVNAME=$DEVNAME
SERIAL=$ID_SERIAL_SHORT

function debug {
    echo "[$(date)] ${ACTION} ${DEVNAME} ${SERIAL}">> /tmp/serial_debug.log
    printenv >> /tmp/serial_debug.log
    exit 1
}
#debug

install_dir=/root/web_consoles
serial_dir="${install_dir}/serials"
link_dir="${install_dir}/links"
bin_dir=/usr/local/bin
log_file=/tmp/serial.log


if [[ -z $ACTION || -z $DEVNAME || -z $SERIAL ]]; then
    echo "[$(date)] ERROR: One of more vars undefined ${ACTION} ${DEVNAME} ${SERIAL}" >> $log_file
    exit 1
fi

if [[ ! -d $install_dir ]]; then
	echo "[$(date)] ERROR: Invalid install directory ${install_dir}" >> $log_file
	exit 1
fi

screen -wipe

#Get hostname
out=$(grep -h -m 1 $SERIAL $serial_dir/*)
hostname="$(echo ${out##* } | xargs)"

if [[ -z $hostname ]]; then

    #handle undefined serial
    echo "[$(date)] ERROR: unknown serial '${SERIAL}'" >> $log_file
    if [[ $ACTION == 'add' ]]; then
        echo "[$(date)] ERROR: added unknown serial '${SERIAL}'" >> $log_file
        if [[ -e "${link_dir}/${SERIAL}.unknown" ]]; then
            rm "${link_dir}/${SERIAL}.unknown"
        fi
        ln -s $DEVNAME "${link_dir}/${SERIAL}.unknown"
    fi
    if [[ $ACTION == 'remove' ]]; then
        echo "[$(date)] ERROR: removed unknown serial '${SERIAL}'" >> $log_file
        rm "${link_dir}/${SERIAL}.unknown"
    fi
    exit 1
fi

echo "[$(date)] NEW EVENT! ${ACTION} ${hostname}(${SERIAL}) -> ${DEVNAME}" >> $log_file

if [[ $ACTION == 'add' ]]; then

    #Create screen if none
    echo  "[$(date)] checking for screen" >> $log_file
    screen -ls | grep $hostname > /dev/null 2>&1
    if [[ $? -eq 1 ]]; then
        echo "[$(date)] Starting screen for ${hostname} ${DEVNAME}" >> $log_file
        #udev will kill any spawned processes unless you use a intermediary
        echo "screen -dmS ${hostname} ${DEVNAME} 115200" | at now
    fi

    #Create dev symlink
    dev_symlink="/dev/tty_${hostname}"
    if [[ -e $dev_symlink ]]; then
        echo "[$(date)] ERROR: Deleting stale symlink ${dev_symlink}" >> $log_file
        rm $dev_symlink
    fi
    ln -s $DEVNAME $dev_symlink
    echo "[$(date)] Created symlink ${dev_symlink}" >> $log_file

    #Create node symlink
    node_symlink="${link_dir}/${hostname}"
    if [[ -e $node_symlink ]]; then
        echo "[$(date)] ERROR: Deleting stale symlink ${node_symlink}" >> $log_file
        rm $node_symlink
    fi
    ln -s $DEVNAME $node_symlink
    echo "[$(date)] Created symlink ${node_symlink}" >> $log_file

    #Create bin file
    cp "${install_dir}/bin/exe_template" "${bin_dir}/tty_${hostname}"
    sed -i "s/HOSTNAME/${hostname}/g" "${bin_dir}/tty_${hostname}"
    chmod 777 "${bin_dir}/tty_${hostname}"
    echo "[$(date)] Created exe ${bin_dir}/tty_${hostname}" >> $log_file
fi


if [[ $ACTION == 'remove' ]]; then

    #Delete screen if exists
    screen -ls | grep $hostname > /dev/null 2>&1
    if [[ $? -eq 0 ]]; then
        echo "[$(date)] Removing screen for ${hostname}"
        screen -X -S $hostname quit
    fi

    #Delete dev symlink
    dev_symlink="/dev/tty_${hostname}"
    rm -f $dev_symlink
    echo "[$(date)] Removed symlink ${dev_symlink}" >> $log_file

    #Delete node symlink
    node_symlink="${link_dir}/${hostname}"
    rm -f $node_symlink
    echo "[$(date)] Removed symlink ${node_symlink}" >> $log_file

    #Delete bin file
    rm -f ${bin_dir}/tty_${hostname}
    echo "[$(date)] Removed exe ${bin_dir}/tty_${hostname}" >> $log_file
fi